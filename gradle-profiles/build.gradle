import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


apply from: "static-code-analysis.gradle"
apply from: "code-coverage.gradle"

//if (!hasProperty('buildProfile')) ext.buildProfile = 'dev'
def buildProfile = hasProperty('buildProfile') ? project.property("buildProfile") : "dev"
apply from: "profile-${buildProfile}.gradle"
task greeting {
    doLast {
        println message
    }
}

processResources {
    filesMatching("application.properties") {
        filter ReplaceTokens, tokens: ["activeProfiles": buildProfile]
    }

    with copySpec {
        from "src/main/resources-${buildProfile}"
        include "datasource.properties"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.boot:spring-boot-starter-webflux')
}

test {
    useJUnitPlatform()
}
